{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [username, setUsername] = useState(''); // For Sign Up and Login\n//   const [password, setPassword] = useState(''); // For Sign Up and Login\n//   const [message, setMessage] = useState('');\n//   const [medicines, setMedicines] = useState([]);\n//   const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [editMedicine, setEditMedicine] = useState(null);\n//   const [cartItems, setCartItems] = useState([]);\n\n//   // State for Sign Up and Login forms\n//   const [showSignUp, setShowSignUp] = useState(false);\n//   const [showLogin, setShowLogin] = useState(false);\n\n//   // State to toggle the Create Medicine form\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   useEffect(() => {\n//     fetchMedicines();\n//     if (isLoggedIn) fetchCart();\n//   }, [isLoggedIn]);\n\n//   const fetchMedicines = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/medicines');\n//       setMedicines(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const fetchCart = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/cart');\n//       setCartItems(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const signup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/signup', { username, password });\n//       setMessage('User created successfully');\n//       setShowSignUp(false); // Hide the sign-up form after successful sign-up\n//     } catch (error) {\n//       setMessage('Error creating user');\n//     }\n//   };\n\n//   const login = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/login', { username, password });\n//       setMessage('Logged in successfully');\n//       setIsLoggedIn(true);\n//       setShowLogin(false); // Hide the login form after successful login\n//     } catch (error) {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   const addMedicine = async (e) => {\n//     e.preventDefault();\n//     if (editMedicine) {\n//       await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n//       setMessage('Medicine updated successfully!');\n//       setEditMedicine(null);\n//     } else {\n//       await axios.post('http://localhost:5000/medicines', newMedicine);\n//       setMessage('Medicine added successfully!');\n//     }\n//     fetchMedicines();\n//     setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n//     setShowCreateForm(false); // Hide form after submission\n//   };\n\n//   const deleteMedicine = async (id) => {\n//     await axios.delete(`http://localhost:5000/medicines/${id}`);\n//     setMessage('Medicine deleted successfully!');\n//     fetchMedicines();\n//   };\n\n//   const editMedicineForm = (medicine) => {\n//     setNewMedicine(medicine);\n//     setEditMedicine(medicine);\n//     setShowCreateForm(true);  // Show the form in edit mode\n//   };\n\n//   const addToCart = async (medicineId) => {\n//     await axios.post('http://localhost:5000/cart', { medicine_id: medicineId });\n//     setMessage('Medicine added to cart!');\n//     fetchCart();\n//   };\n\n//   // Toggle the create medicine form\n//   const toggleCreateForm = () => {\n//     setShowCreateForm(!showCreateForm);\n//     setEditMedicine(null); // Reset the form for creating a new medicine\n//   };\n\n//   // Toggle the Sign Up form\n//   const toggleSignUpForm = () => {\n//     setShowSignUp(!showSignUp);\n//   };\n\n//   // Toggle the Login form\n//   const toggleLoginForm = () => {\n//     setShowLogin(!showLogin);\n//   };\n\n//   return (\n//     <div>\n//       <nav className=\"navbar\">\n//         <h1>Herbal Remedy System</h1>\n//         <div className=\"navbar-links\">\n//           <button onClick={toggleSignUpForm}>Sign Up</button>\n//           <button onClick={toggleLoginForm}>Login</button>\n//         </div>\n//       </nav>\n\n//       <div className=\"container\">\n//         {message && <p>{message}</p>}\n\n//         {/* Toggle Create Medicine Button */}\n//         {isLoggedIn && (\n//           <button onClick={toggleCreateForm} className=\"create-btn\">\n//             <span>+</span> {/* Icon for Create */}\n//           </button>\n//         )}\n\n//         {/* Medicine Creation Form */}\n//         {showCreateForm && (\n//           <form onSubmit={addMedicine} className=\"medicine-form\">\n//             <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Name\"\n//               value={newMedicine.name}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Image URL\"\n//               value={newMedicine.image_url}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n//               required\n//             />\n//             <textarea\n//               placeholder=\"Description\"\n//               value={newMedicine.description}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n//               required\n//             ></textarea>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Prescription\"\n//               value={newMedicine.prescription}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n//               required\n//             />\n//             <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n//           </form>\n//         )}\n\n//         {/* Medicines List and CRUD Operations */}\n//         {isLoggedIn && (\n//           <div className=\"medicine-list\">\n//             {medicines.map((medicine) => (\n//               <div key={medicine.id} className=\"medicine-card\">\n//                 <h2>{medicine.name}</h2>\n//                 <img src={medicine.image_url} alt={medicine.name} />\n//                 <p>{medicine.description}</p>\n//                 <p>\n//                   <strong>...</strong> {medicine.prescription}\n//                 </p>\n//                 <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n//                 <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n//                 <button onClick={() => addToCart(medicine.id)}>Add to Cart</button>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n\n//         {/* Sign Up Form */}\n//         {showSignUp && (\n//           <form onSubmit={signup} className=\"auth-form\">\n//             <h2>Sign Up</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               required\n//             />\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//             />\n//             <button type=\"submit\">Sign Up</button>\n//           </form>\n//         )}\n\n//         {/* Login Form */}\n//         {showLogin && (\n//           <form onSubmit={login} className=\"auth-form\">\n//             <h2>Login</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               required\n//             />\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//             />\n//             <button type=\"submit\">Login</button>\n//           </form>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/root/development/haba/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [username, setUsername] = useState(''); // For Sign Up and Login\n//   const [password, setPassword] = useState(''); // For Sign Up and Login\n//   const [message, setMessage] = useState('');\n//   const [medicines, setMedicines] = useState([]);\n//   const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [editMedicine, setEditMedicine] = useState(null);\n//   const [cartItems, setCartItems] = useState([]);\n\n//   // State for Sign Up and Login forms\n//   const [showSignUp, setShowSignUp] = useState(false);\n//   const [showLogin, setShowLogin] = useState(false);\n\n//   // State to toggle the Create Medicine form\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   useEffect(() => {\n//     fetchMedicines();\n//     if (isLoggedIn) fetchCart();\n//   }, [isLoggedIn]);\n\n//   const fetchMedicines = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/medicines');\n//       setMedicines(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const fetchCart = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/cart');\n//       setCartItems(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const signup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/signup', { username, password });\n//       setMessage('User created successfully');\n//       setShowSignUp(false); // Hide the sign-up form after successful sign-up\n//     } catch (error) {\n//       setMessage('Error creating user');\n//     }\n//   };\n\n//   const login = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/login', { username, password });\n//       setMessage('Logged in successfully');\n//       setIsLoggedIn(true);\n//       setShowLogin(false); // Hide the login form after successful login\n//     } catch (error) {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   const addMedicine = async (e) => {\n//     e.preventDefault();\n//     if (editMedicine) {\n//       await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n//       setMessage('Medicine updated successfully!');\n//       setEditMedicine(null);\n//     } else {\n//       await axios.post('http://localhost:5000/medicines', newMedicine);\n//       setMessage('Medicine added successfully!');\n//     }\n//     fetchMedicines();\n//     setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n//     setShowCreateForm(false); // Hide form after submission\n//   };\n\n//   const deleteMedicine = async (id) => {\n//     await axios.delete(`http://localhost:5000/medicines/${id}`);\n//     setMessage('Medicine deleted successfully!');\n//     fetchMedicines();\n//   };\n\n//   const editMedicineForm = (medicine) => {\n//     setNewMedicine(medicine);\n//     setEditMedicine(medicine);\n//     setShowCreateForm(true);  // Show the form in edit mode\n//   };\n\n//   const addToCart = async (medicineId) => {\n//     await axios.post('http://localhost:5000/cart', { medicine_id: medicineId });\n//     setMessage('Medicine added to cart!');\n//     fetchCart();\n//   };\n\n//   // Toggle the create medicine form\n//   const toggleCreateForm = () => {\n//     setShowCreateForm(!showCreateForm);\n//     setEditMedicine(null); // Reset the form for creating a new medicine\n//   };\n\n//   // Toggle the Sign Up form\n//   const toggleSignUpForm = () => {\n//     setShowSignUp(!showSignUp);\n//   };\n\n//   // Toggle the Login form\n//   const toggleLoginForm = () => {\n//     setShowLogin(!showLogin);\n//   };\n\n//   return (\n//     <div>\n//       <nav className=\"navbar\">\n//         <h1>Herbal Remedy System</h1>\n//         <div className=\"navbar-links\">\n//           <button onClick={toggleSignUpForm}>Sign Up</button>\n//           <button onClick={toggleLoginForm}>Login</button>\n//         </div>\n//       </nav>\n\n//       <div className=\"container\">\n//         {message && <p>{message}</p>}\n\n//         {/* Toggle Create Medicine Button */}\n//         {isLoggedIn && (\n//           <button onClick={toggleCreateForm} className=\"create-btn\">\n//             <span>+</span> {/* Icon for Create */}\n//           </button>\n//         )}\n\n//         {/* Medicine Creation Form */}\n//         {showCreateForm && (\n//           <form onSubmit={addMedicine} className=\"medicine-form\">\n//             <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Name\"\n//               value={newMedicine.name}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Image URL\"\n//               value={newMedicine.image_url}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n//               required\n//             />\n//             <textarea\n//               placeholder=\"Description\"\n//               value={newMedicine.description}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n//               required\n//             ></textarea>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Prescription\"\n//               value={newMedicine.prescription}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n//               required\n//             />\n//             <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n//           </form>\n//         )}\n\n//         {/* Medicines List and CRUD Operations */}\n//         {isLoggedIn && (\n//           <div className=\"medicine-list\">\n//             {medicines.map((medicine) => (\n//               <div key={medicine.id} className=\"medicine-card\">\n//                 <h2>{medicine.name}</h2>\n//                 <img src={medicine.image_url} alt={medicine.name} />\n//                 <p>{medicine.description}</p>\n//                 <p>\n//                   <strong>...</strong> {medicine.prescription}\n//                 </p>\n//                 <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n//                 <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n//                 <button onClick={() => addToCart(medicine.id)}>Add to Cart</button>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n\n//         {/* Sign Up Form */}\n//         {showSignUp && (\n//           <form onSubmit={signup} className=\"auth-form\">\n//             <h2>Sign Up</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               required\n//             />\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//             />\n//             <button type=\"submit\">Sign Up</button>\n//           </form>\n//         )}\n\n//         {/* Login Form */}\n//         {showLogin && (\n//           <form onSubmit={login} className=\"auth-form\">\n//             <h2>Login</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               required\n//             />\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//             />\n//             <button type=\"submit\">Login</button>\n//           </form>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}