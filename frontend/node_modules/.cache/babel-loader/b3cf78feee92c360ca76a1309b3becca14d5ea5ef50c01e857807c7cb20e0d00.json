{"ast":null,"code":"var _jsxFileName = \"/root/development/haba/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// // Add the updated App.js with added features like About, Contact, and Footer\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\n// import './App.css';\n\n// // About Page Component\n// function About() {\n//   return (\n//     <div>\n//       <h2>About Herbal Remedy System</h2>\n//       <p>We provide the best herbal remedies for various ailments. All our medicines are natural and carefully sourced.</p>\n//     </div>\n//   );\n// }\n\n// // Contact Page Component\n// function Contact() {\n//   return (\n//     <div>\n//       <h2>Contact Us</h2>\n//       <p>Email: info@herbalremedysystem.com</p>\n//       <p>Phone: +123 456 7890</p>\n//     </div>\n//   );\n// }\n\n// // Footer Component\n// function Footer() {\n//   return (\n//     <footer>\n//       <p>&copy; 2024 Herbal Remedy System. All rights reserved.</p>\n//     </footer>\n//   );\n// }\n\n// // Main App Component\n// function App() {\n//   const [username, setUsername] = useState(''); // For Sign Up and Login\n//   const [password, setPassword] = useState(''); // For Sign Up and Login\n//   const [message, setMessage] = useState('');\n//   const [medicines, setMedicines] = useState([]);\n//   const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [editMedicine, setEditMedicine] = useState(null);\n//   const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n\n//   // State for Sign Up and Login forms\n//   const [showSignUp, setShowSignUp] = useState(false);\n//   const [showLogin, setShowLogin] = useState(false);\n\n//   // State to toggle the Create Medicine form\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   useEffect(() => {\n//     fetchMedicines();\n//     // Fetch cart items from localStorage on load\n//     loadCartFromLocalStorage();\n//   }, []);\n\n//   const fetchMedicines = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/medicines');\n//       setMedicines(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const loadCartFromLocalStorage = () => {\n//     const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n//     setCartItems(savedCart);\n//   };\n\n//   const signup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/signup', { username, password });\n//       setMessage('User created successfully');\n//       setShowSignUp(false); // Hide the sign-up form after successful sign-up\n//     } catch (error) {\n//       setMessage('Error creating user');\n//     }\n//   };\n\n//   const login = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/login', { username, password });\n//       setMessage('Logged in successfully');\n//       setIsLoggedIn(true);\n//       setShowLogin(false); // Hide the login form after successful login\n//     } catch (error) {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   const addMedicine = async (e) => {\n//     e.preventDefault();\n//     if (editMedicine) {\n//       await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n//       setMessage('Medicine updated successfully!');\n//       setEditMedicine(null);\n//     } else {\n//       await axios.post('http://localhost:5000/medicines', newMedicine);\n//       setMessage('Medicine added successfully!');\n//     }\n//     fetchMedicines();\n//     setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n//     setShowCreateForm(false); // Hide form after submission\n//   };\n\n//   const deleteMedicine = async (id) => {\n//     await axios.delete(`http://localhost:5000/medicines/${id}`);\n//     setMessage('Medicine deleted successfully!');\n//     fetchMedicines();\n//   };\n\n//   const editMedicineForm = (medicine) => {\n//     setNewMedicine(medicine);\n//     setEditMedicine(medicine);\n//     setShowCreateForm(true);  // Show the form in edit mode\n//   };\n\n//   // Function to handle adding a medicine to the cart\n//   const addToCart = (medicine) => {\n//     let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n//     // Check if the item is already in the cart\n//     const existingItem = cart.find(item => item.id === medicine.id);\n\n//     if (existingItem) {\n//       // If already exists, increase the quantity\n//       existingItem.quantity += 1;\n//     } else {\n//       // Add new item with a quantity of 1\n//       cart.push({ ...medicine, quantity: 1 });\n//     }\n\n//     localStorage.setItem('cart', JSON.stringify(cart));\n//     setCartItems(cart);\n//     setMessage('Medicine added to cart');\n//   };\n\n//   // Toggle the create medicine form\n//   const toggleCreateForm = () => {\n//     setShowCreateForm(!showCreateForm);\n//     setEditMedicine(null); // Reset the form for creating a new medicine\n//   };\n\n//   // Toggle the Sign Up form\n//   const toggleSignUpForm = () => {\n//     setShowSignUp(!showSignUp);\n//   };\n\n//   // Toggle the Login form\n//   const toggleLoginForm = () => {\n//     setShowLogin(!showLogin);\n//   };\n\n//   return (\n//     <Router>\n//       <div>\n//         <nav className=\"navbar\">\n//           <h1>Herbal Remedy System</h1>\n//           <div className=\"navbar-links\">\n//             <Link to=\"/\">Home</Link>\n//             <Link to=\"/about\">About</Link>\n//             <Link to=\"/contact\">Contact</Link>\n//             <button onClick={toggleSignUpForm}>Sign Up</button>\n//             <button onClick={toggleLoginForm}>Login</button>\n//           </div>\n//         </nav>\n\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <div className=\"container\">\n//                 {message && <p>{message}</p>}\n\n//                 {/* Toggle Create Medicine Button */}\n//                 {isLoggedIn && (\n//                   <button onClick={toggleCreateForm} className=\"create-btn\">\n//                     <span>+</span> {/* Icon for Create */}\n//                   </button>\n//                 )}\n\n//                 {/* Medicine Creation Form */}\n//                 {showCreateForm && (\n//                   <form onSubmit={addMedicine} className=\"medicine-form\">\n//                     <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Name\"\n//                       value={newMedicine.name}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n//                       required\n//                     />\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Image URL\"\n//                       value={newMedicine.image_url}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n//                       required\n//                     />\n//                     <textarea\n//                       placeholder=\"Description\"\n//                       value={newMedicine.description}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n//                       required\n//                     ></textarea>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Prescription\"\n//                       value={newMedicine.prescription}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n//                       required\n//                     />\n//                     <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n//                   </form>\n//                 )}\n\n//                 {/* Medicines List and CRUD Operations */}\n//                 {isLoggedIn && (\n//                   <div className=\"medicine-list\">\n//                     {medicines.map((medicine) => (\n//                       <div key={medicine.id} className=\"medicine-card\">\n//                         <h2>{medicine.name}</h2>\n//                         <img src={medicine.image_url} alt={medicine.name} />\n//                         <p>{medicine.description}</p>\n//                         <p>\n//                           <strong>Prescription:</strong> {medicine.prescription}\n//                         </p>\n//                         <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n//                         <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n//                         <button onClick={() => addToCart(medicine)}>Add to Cart</button>\n//                       </div>\n//                     ))}\n//                   </div>\n//                 )}\n\n//                 {/* Sign Up Form */}\n//                 {showSignUp && (\n//                   <form onSubmit={signup} className=\"auth-form\">\n//                     <h2>Sign Up</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                     />\n//                     <input\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                     />\n//                     <button type=\"submit\">Sign Up</button>\n//                   </form>\n//                 )}\n\n//                 {/* Login Form */}\n//                 {showLogin && (\n//                   <form onSubmit={login} className=\"auth-form\">\n//                     <h2>Login</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                     />\n//                     <input\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                     />\n//                     <button type=\"submit\">Login</button>\n//                   </form>\n//                 )}\n//               </div>\n//             }\n//           />\n\n//           <Route path=\"/about\" element={<About />} />\n//           <Route path=\"/contact\" element={<Contact />} />\n//         </Routes>\n\n//         <Footer />\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport './App.css';\n\n// About Page Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"About Herbal Remedy System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"We provide the best herbal remedies for various ailments. All our medicines are natural and carefully sourced.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n}\n\n// Contact Page Component\n_c = About;\nfunction Contact() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Email: info@herbalremedysystem.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Phone: +123 456 7890\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this);\n}\n\n// Footer Component\n_c2 = Contact;\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\xA9 2024 Herbal Remedy System. All rights reserved.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n}\n\n// Main App Component\n_c3 = Footer;\nfunction App() {\n  _s();\n  const [username, setUsername] = useState(''); // For Sign Up and Login\n  const [password, setPassword] = useState(''); // For Sign Up and Login\n  const [message, setMessage] = useState('');\n  const [medicines, setMedicines] = useState([]);\n  const [newMedicine, setNewMedicine] = useState({\n    name: '',\n    image_url: '',\n    description: '',\n    prescription: ''\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [editMedicine, setEditMedicine] = useState(null);\n  const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n\n  // State for Sign Up and Login forms\n  const [showSignUp, setShowSignUp] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n\n  // State to toggle the Create Medicine form\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  useEffect(() => {\n    fetchMedicines();\n    // Fetch cart items from localStorage on load\n    loadCartFromLocalStorage();\n  }, []);\n  const fetchMedicines = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/medicines');\n      setMedicines(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const loadCartFromLocalStorage = () => {\n    const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCartItems(savedCart);\n  };\n  const signup = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/signup', {\n        username,\n        password\n      });\n      setMessage('User created successfully');\n      setShowSignUp(false); // Hide the sign-up form after successful sign-up\n    } catch (error) {\n      setMessage('Error creating user');\n    }\n  };\n  const login = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      setMessage('Logged in successfully');\n      setIsLoggedIn(true);\n      setShowLogin(false); // Hide the login form after successful login\n    } catch (error) {\n      setMessage('Invalid credentials');\n    }\n  };\n  const addMedicine = async e => {\n    e.preventDefault();\n    if (editMedicine) {\n      await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n      setMessage('Medicine updated successfully!');\n      setEditMedicine(null);\n    } else {\n      await axios.post('http://localhost:5000/medicines', newMedicine);\n      setMessage('Medicine added successfully!');\n    }\n    fetchMedicines();\n    setNewMedicine({\n      name: '',\n      image_url: '',\n      description: '',\n      prescription: ''\n    });\n    setShowCreateForm(false); // Hide form after submission\n  };\n  const deleteMedicine = async id => {\n    await axios.delete(`http://localhost:5000/medicines/${id}`);\n    setMessage('Medicine deleted successfully!');\n    fetchMedicines();\n  };\n  const editMedicineForm = medicine => {\n    setNewMedicine(medicine);\n    setEditMedicine(medicine);\n    setShowCreateForm(true); // Show the form in edit mode\n  };\n\n  // Function to handle adding a medicine to the cart\n  const addToCart = medicine => {\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n    // Check if the item is already in the cart\n    const existingItem = cart.find(item => item.id === medicine.id);\n    if (existingItem) {\n      // If already exists, increase the quantity\n      existingItem.quantity += 1;\n    } else {\n      // Add new item with a quantity of 1\n      cart.push({\n        ...medicine,\n        quantity: 1\n      });\n    }\n    localStorage.setItem('cart', JSON.stringify(cart));\n    setCartItems(cart);\n    setMessage('Medicine added to cart');\n  };\n\n  // Toggle the create medicine form\n  const toggleCreateForm = () => {\n    setShowCreateForm(!showCreateForm);\n    setEditMedicine(null); // Reset the form for creating a new medicine\n  };\n\n  // Toggle the Sign Up form\n  const toggleSignUpForm = () => {\n    setShowSignUp(!showSignUp);\n  };\n\n  // Toggle the Login form\n  const toggleLoginForm = () => {\n    setShowLogin(!showLogin);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Herbal Remedy System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-links\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/about\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/contact\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleSignUpForm,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleLoginForm,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [message && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 29\n            }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleCreateForm,\n              className: \"create-btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 19\n            }, this), showCreateForm && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: addMedicine,\n              className: \"medicine-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: editMedicine ? 'Edit Medicine' : 'Create Medicine'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Name\",\n                value: newMedicine.name,\n                onChange: e => setNewMedicine({\n                  ...newMedicine,\n                  name: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Image URL\",\n                value: newMedicine.image_url,\n                onChange: e => setNewMedicine({\n                  ...newMedicine,\n                  image_url: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Description\",\n                value: newMedicine.description,\n                onChange: e => setNewMedicine({\n                  ...newMedicine,\n                  description: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Prescription\",\n                value: newMedicine.prescription,\n                onChange: e => setNewMedicine({\n                  ...newMedicine,\n                  prescription: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: [editMedicine ? 'Update' : 'Add', \" Herbs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 19\n            }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"medicine-list\",\n              children: medicines.map(medicine => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"medicine-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: medicine.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: medicine.image_url,\n                  alt: medicine.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: medicine.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Prescription:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 27\n                  }, this), \" \", medicine.prescription]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => editMedicineForm(medicine),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteMedicine(medicine.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => addToCart(medicine),\n                  children: \"a\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 25\n                }, this)]\n              }, medicine.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 19\n            }, this), showSignUp && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: signup,\n              className: \"auth-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Username\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 19\n            }, this), showLogin && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: login,\n              className: \"auth-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Username\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact\",\n          element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Pi78ra5BsrKMV7hcTAaTLa9NpmY=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"About\");\n$RefreshReg$(_c2, \"Contact\");\n$RefreshReg$(_c3, \"Footer\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","Link","Routes","jsxDEV","_jsxDEV","About","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Contact","_c2","Footer","_c3","App","_s","username","setUsername","password","setPassword","message","setMessage","medicines","setMedicines","newMedicine","setNewMedicine","name","image_url","description","prescription","isLoggedIn","setIsLoggedIn","editMedicine","setEditMedicine","cartItems","setCartItems","showSignUp","setShowSignUp","showLogin","setShowLogin","showCreateForm","setShowCreateForm","fetchMedicines","loadCartFromLocalStorage","response","get","data","error","console","log","savedCart","JSON","parse","localStorage","getItem","signup","e","preventDefault","post","login","addMedicine","put","id","deleteMedicine","delete","editMedicineForm","medicine","addToCart","cart","existingItem","find","item","quantity","push","setItem","stringify","toggleCreateForm","toggleSignUpForm","toggleLoginForm","className","to","onClick","path","element","onSubmit","type","placeholder","value","onChange","target","required","map","src","alt","_c4","$RefreshReg$"],"sources":["/root/development/haba/frontend/src/App.js"],"sourcesContent":["// // Add the updated App.js with added features like About, Contact, and Footer\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\n// import './App.css';\n\n// // About Page Component\n// function About() {\n//   return (\n//     <div>\n//       <h2>About Herbal Remedy System</h2>\n//       <p>We provide the best herbal remedies for various ailments. All our medicines are natural and carefully sourced.</p>\n//     </div>\n//   );\n// }\n\n// // Contact Page Component\n// function Contact() {\n//   return (\n//     <div>\n//       <h2>Contact Us</h2>\n//       <p>Email: info@herbalremedysystem.com</p>\n//       <p>Phone: +123 456 7890</p>\n//     </div>\n//   );\n// }\n\n// // Footer Component\n// function Footer() {\n//   return (\n//     <footer>\n//       <p>&copy; 2024 Herbal Remedy System. All rights reserved.</p>\n//     </footer>\n//   );\n// }\n\n// // Main App Component\n// function App() {\n//   const [username, setUsername] = useState(''); // For Sign Up and Login\n//   const [password, setPassword] = useState(''); // For Sign Up and Login\n//   const [message, setMessage] = useState('');\n//   const [medicines, setMedicines] = useState([]);\n//   const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [editMedicine, setEditMedicine] = useState(null);\n//   const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n\n//   // State for Sign Up and Login forms\n//   const [showSignUp, setShowSignUp] = useState(false);\n//   const [showLogin, setShowLogin] = useState(false);\n\n//   // State to toggle the Create Medicine form\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   useEffect(() => {\n//     fetchMedicines();\n//     // Fetch cart items from localStorage on load\n//     loadCartFromLocalStorage();\n//   }, []);\n\n//   const fetchMedicines = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/medicines');\n//       setMedicines(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const loadCartFromLocalStorage = () => {\n//     const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n//     setCartItems(savedCart);\n//   };\n\n//   const signup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/signup', { username, password });\n//       setMessage('User created successfully');\n//       setShowSignUp(false); // Hide the sign-up form after successful sign-up\n//     } catch (error) {\n//       setMessage('Error creating user');\n//     }\n//   };\n\n//   const login = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/login', { username, password });\n//       setMessage('Logged in successfully');\n//       setIsLoggedIn(true);\n//       setShowLogin(false); // Hide the login form after successful login\n//     } catch (error) {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   const addMedicine = async (e) => {\n//     e.preventDefault();\n//     if (editMedicine) {\n//       await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n//       setMessage('Medicine updated successfully!');\n//       setEditMedicine(null);\n//     } else {\n//       await axios.post('http://localhost:5000/medicines', newMedicine);\n//       setMessage('Medicine added successfully!');\n//     }\n//     fetchMedicines();\n//     setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n//     setShowCreateForm(false); // Hide form after submission\n//   };\n\n//   const deleteMedicine = async (id) => {\n//     await axios.delete(`http://localhost:5000/medicines/${id}`);\n//     setMessage('Medicine deleted successfully!');\n//     fetchMedicines();\n//   };\n\n//   const editMedicineForm = (medicine) => {\n//     setNewMedicine(medicine);\n//     setEditMedicine(medicine);\n//     setShowCreateForm(true);  // Show the form in edit mode\n//   };\n\n//   // Function to handle adding a medicine to the cart\n//   const addToCart = (medicine) => {\n//     let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n//     // Check if the item is already in the cart\n//     const existingItem = cart.find(item => item.id === medicine.id);\n\n//     if (existingItem) {\n//       // If already exists, increase the quantity\n//       existingItem.quantity += 1;\n//     } else {\n//       // Add new item with a quantity of 1\n//       cart.push({ ...medicine, quantity: 1 });\n//     }\n\n//     localStorage.setItem('cart', JSON.stringify(cart));\n//     setCartItems(cart);\n//     setMessage('Medicine added to cart');\n//   };\n\n//   // Toggle the create medicine form\n//   const toggleCreateForm = () => {\n//     setShowCreateForm(!showCreateForm);\n//     setEditMedicine(null); // Reset the form for creating a new medicine\n//   };\n\n//   // Toggle the Sign Up form\n//   const toggleSignUpForm = () => {\n//     setShowSignUp(!showSignUp);\n//   };\n\n//   // Toggle the Login form\n//   const toggleLoginForm = () => {\n//     setShowLogin(!showLogin);\n//   };\n\n//   return (\n//     <Router>\n//       <div>\n//         <nav className=\"navbar\">\n//           <h1>Herbal Remedy System</h1>\n//           <div className=\"navbar-links\">\n//             <Link to=\"/\">Home</Link>\n//             <Link to=\"/about\">About</Link>\n//             <Link to=\"/contact\">Contact</Link>\n//             <button onClick={toggleSignUpForm}>Sign Up</button>\n//             <button onClick={toggleLoginForm}>Login</button>\n//           </div>\n//         </nav>\n\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <div className=\"container\">\n//                 {message && <p>{message}</p>}\n\n//                 {/* Toggle Create Medicine Button */}\n//                 {isLoggedIn && (\n//                   <button onClick={toggleCreateForm} className=\"create-btn\">\n//                     <span>+</span> {/* Icon for Create */}\n//                   </button>\n//                 )}\n\n//                 {/* Medicine Creation Form */}\n//                 {showCreateForm && (\n//                   <form onSubmit={addMedicine} className=\"medicine-form\">\n//                     <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Name\"\n//                       value={newMedicine.name}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n//                       required\n//                     />\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Image URL\"\n//                       value={newMedicine.image_url}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n//                       required\n//                     />\n//                     <textarea\n//                       placeholder=\"Description\"\n//                       value={newMedicine.description}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n//                       required\n//                     ></textarea>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Prescription\"\n//                       value={newMedicine.prescription}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n//                       required\n//                     />\n//                     <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n//                   </form>\n//                 )}\n\n//                 {/* Medicines List and CRUD Operations */}\n//                 {isLoggedIn && (\n//                   <div className=\"medicine-list\">\n//                     {medicines.map((medicine) => (\n//                       <div key={medicine.id} className=\"medicine-card\">\n//                         <h2>{medicine.name}</h2>\n//                         <img src={medicine.image_url} alt={medicine.name} />\n//                         <p>{medicine.description}</p>\n//                         <p>\n//                           <strong>Prescription:</strong> {medicine.prescription}\n//                         </p>\n//                         <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n//                         <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n//                         <button onClick={() => addToCart(medicine)}>Add to Cart</button>\n//                       </div>\n//                     ))}\n//                   </div>\n//                 )}\n\n//                 {/* Sign Up Form */}\n//                 {showSignUp && (\n//                   <form onSubmit={signup} className=\"auth-form\">\n//                     <h2>Sign Up</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                     />\n//                     <input\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                     />\n//                     <button type=\"submit\">Sign Up</button>\n//                   </form>\n//                 )}\n\n//                 {/* Login Form */}\n//                 {showLogin && (\n//                   <form onSubmit={login} className=\"auth-form\">\n//                     <h2>Login</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                     />\n//                     <input\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                     />\n//                     <button type=\"submit\">Login</button>\n//                   </form>\n//                 )}\n//               </div>\n//             }\n//           />\n\n//           <Route path=\"/about\" element={<About />} />\n//           <Route path=\"/contact\" element={<Contact />} />\n//         </Routes>\n\n//         <Footer />\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport './App.css';\n\n// About Page Component\nfunction About() {\n  return (\n    <div>\n      <h2>About Herbal Remedy System</h2>\n      <p>We provide the best herbal remedies for various ailments. All our medicines are natural and carefully sourced.</p>\n    </div>\n  );\n}\n\n// Contact Page Component\nfunction Contact() {\n  return (\n    <div>\n      <h2>Contact Us</h2>\n      <p>Email: info@herbalremedysystem.com</p>\n      <p>Phone: +123 456 7890</p>\n    </div>\n  );\n}\n\n// Footer Component\nfunction Footer() {\n  return (\n    <footer>\n      <p>&copy; 2024 Herbal Remedy System. All rights reserved.</p>\n    </footer>\n  );\n}\n\n// Main App Component\nfunction App() {\n  const [username, setUsername] = useState(''); // For Sign Up and Login\n  const [password, setPassword] = useState(''); // For Sign Up and Login\n  const [message, setMessage] = useState('');\n  const [medicines, setMedicines] = useState([]);\n  const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [editMedicine, setEditMedicine] = useState(null);\n  const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n\n  // State for Sign Up and Login forms\n  const [showSignUp, setShowSignUp] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n\n  // State to toggle the Create Medicine form\n  const [showCreateForm, setShowCreateForm] = useState(false);\n\n  useEffect(() => {\n    fetchMedicines();\n    // Fetch cart items from localStorage on load\n    loadCartFromLocalStorage();\n  }, []);\n\n  const fetchMedicines = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/medicines');\n      setMedicines(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const loadCartFromLocalStorage = () => {\n    const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCartItems(savedCart);\n  };\n\n  const signup = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/signup', { username, password });\n      setMessage('User created successfully');\n      setShowSignUp(false); // Hide the sign-up form after successful sign-up\n    } catch (error) {\n      setMessage('Error creating user');\n    }\n  };\n\n  const login = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/login', { username, password });\n      setMessage('Logged in successfully');\n      setIsLoggedIn(true);\n      setShowLogin(false); // Hide the login form after successful login\n    } catch (error) {\n      setMessage('Invalid credentials');\n    }\n  };\n\n  const addMedicine = async (e) => {\n    e.preventDefault();\n    if (editMedicine) {\n      await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n      setMessage('Medicine updated successfully!');\n      setEditMedicine(null);\n    } else {\n      await axios.post('http://localhost:5000/medicines', newMedicine);\n      setMessage('Medicine added successfully!');\n    }\n    fetchMedicines();\n    setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n    setShowCreateForm(false); // Hide form after submission\n  };\n\n  const deleteMedicine = async (id) => {\n    await axios.delete(`http://localhost:5000/medicines/${id}`);\n    setMessage('Medicine deleted successfully!');\n    fetchMedicines();\n  };\n\n  const editMedicineForm = (medicine) => {\n    setNewMedicine(medicine);\n    setEditMedicine(medicine);\n    setShowCreateForm(true);  // Show the form in edit mode\n  };\n\n  // Function to handle adding a medicine to the cart\n  const addToCart = (medicine) => {\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n    // Check if the item is already in the cart\n    const existingItem = cart.find(item => item.id === medicine.id);\n\n    if (existingItem) {\n      // If already exists, increase the quantity\n      existingItem.quantity += 1;\n    } else {\n      // Add new item with a quantity of 1\n      cart.push({ ...medicine, quantity: 1 });\n    }\n\n    localStorage.setItem('cart', JSON.stringify(cart));\n    setCartItems(cart);\n    setMessage('Medicine added to cart');\n  };\n\n  // Toggle the create medicine form\n  const toggleCreateForm = () => {\n    setShowCreateForm(!showCreateForm);\n    setEditMedicine(null); // Reset the form for creating a new medicine\n  };\n\n  // Toggle the Sign Up form\n  const toggleSignUpForm = () => {\n    setShowSignUp(!showSignUp);\n  };\n\n  // Toggle the Login form\n  const toggleLoginForm = () => {\n    setShowLogin(!showLogin);\n  };\n\n  return (\n    <Router>\n      <div>\n        <nav className=\"navbar\">\n          <h1>Herbal Remedy System</h1>\n          <div className=\"navbar-links\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n            <Link to=\"/contact\">Contact</Link>\n            <button onClick={toggleSignUpForm}>Sign Up</button>\n            <button onClick={toggleLoginForm}>Login</button>\n          </div>\n        </nav>\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <div className=\"container\">\n                {message && <p>{message}</p>}\n\n                {/* Toggle Create Medicine Button */}\n                {isLoggedIn && (\n                  <button onClick={toggleCreateForm} className=\"create-btn\">\n                    <span>+</span> {/* Icon for Create */}\n                  </button>\n                )}\n\n                {/* Medicine Creation Form */}\n                {showCreateForm && (\n                  <form onSubmit={addMedicine} className=\"medicine-form\">\n                    <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      value={newMedicine.name}\n                      onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n                      required\n                    />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Image URL\"\n                      value={newMedicine.image_url}\n                      onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n                      required\n                    />\n                    <textarea\n                      placeholder=\"Description\"\n                      value={newMedicine.description}\n                      onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n                      required\n                    ></textarea>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Prescription\"\n                      value={newMedicine.prescription}\n                      onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n                      required\n                    />\n                    <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n                  </form>\n                )}\n\n                {/* Medicines List and CRUD Operations */}\n                {isLoggedIn && (\n                  <div className=\"medicine-list\">\n                    {medicines.map((medicine) => (\n                      <div key={medicine.id} className=\"medicine-card\">\n                        <h2>{medicine.name}</h2>\n                        <img src={medicine.image_url} alt={medicine.name} />\n                        <p>{medicine.description}</p>\n                        <p>\n                          <strong>Prescription:</strong> {medicine.prescription}\n                        </p>\n                        <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n                        <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n                        <button onClick={() => addToCart(medicine)}>a</button>\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                {/* Sign Up Form */}\n                {showSignUp && (\n                  <form onSubmit={signup} className=\"auth-form\">\n                    <h2>Sign Up</h2>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Username\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                      required\n                    />\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      required\n                    />\n                    <button type=\"submit\">Sign Up</button>\n                  </form>\n                )}\n\n                {/* Login Form */}\n                {showLogin && (\n                  <form onSubmit={login} className=\"auth-form\">\n                    <h2>Login</h2>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Username\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                      required\n                    />\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      required\n                    />\n                    <button type=\"submit\">Login</button>\n                  </form>\n                )}\n              </div>\n            }\n          />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/contact\" element={<Contact />} />\n        </Routes>\n\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}