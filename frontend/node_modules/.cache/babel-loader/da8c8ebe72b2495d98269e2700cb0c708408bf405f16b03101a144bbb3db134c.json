{"ast":null,"code":"var _jsxFileName = \"/root/development/haba/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [username, setUsername] = useState(''); // For Sign Up and Login\n//   const [password, setPassword] = useState(''); // For Sign Up and Login\n//   const [message, setMessage] = useState('');\n//   const [medicines, setMedicines] = useState([]);\n//   const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [editMedicine, setEditMedicine] = useState(null);\n//   const [cartItems, setCartItems] = useState([]);\n\n//   // State for Sign Up and Login forms\n//   const [showSignUp, setShowSignUp] = useState(false);\n//   const [showLogin, setShowLogin] = useState(false);\n\n//   // State to toggle the Create Medicine form\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   useEffect(() => {\n//     fetchMedicines();\n//     if (isLoggedIn) fetchCart();\n//   }, [isLoggedIn]);\n\n//   const fetchMedicines = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/medicines');\n//       setMedicines(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const fetchCart = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/cart');\n//       setCartItems(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const signup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/signup', { username, password });\n//       setMessage('User created successfully');\n//       setShowSignUp(false); // Hide the sign-up form after successful sign-up\n//     } catch (error) {\n//       setMessage('Error creating user');\n//     }\n//   };\n\n//   const login = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/login', { username, password });\n//       setMessage('Logged in successfully');\n//       setIsLoggedIn(true);\n//       setShowLogin(false); // Hide the login form after successful login\n//     } catch (error) {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   const addMedicine = async (e) => {\n//     e.preventDefault();\n//     if (editMedicine) {\n//       await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n//       setMessage('Medicine updated successfully!');\n//       setEditMedicine(null);\n//     } else {\n//       await axios.post('http://localhost:5000/medicines', newMedicine);\n//       setMessage('Medicine added successfully!');\n//     }\n//     fetchMedicines();\n//     setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n//     setShowCreateForm(false); // Hide form after submission\n//   };\n\n//   const deleteMedicine = async (id) => {\n//     await axios.delete(`http://localhost:5000/medicines/${id}`);\n//     setMessage('Medicine deleted successfully!');\n//     fetchMedicines();\n//   };\n\n//   const editMedicineForm = (medicine) => {\n//     setNewMedicine(medicine);\n//     setEditMedicine(medicine);\n//     setShowCreateForm(true);  // Show the form in edit mode\n//   };\n\n//   const addToCart = async (medicineId) => {\n//     await axios.post('http://localhost:5000/cart', { medicine_id: medicineId });\n//     setMessage('Medicine added to cart!');\n//     fetchCart();\n//   };\n\n//   // Toggle the create medicine form\n//   const toggleCreateForm = () => {\n//     setShowCreateForm(!showCreateForm);\n//     setEditMedicine(null); // Reset the form for creating a new medicine\n//   };\n\n//   // Toggle the Sign Up form\n//   const toggleSignUpForm = () => {\n//     setShowSignUp(!showSignUp);\n//   };\n\n//   // Toggle the Login form\n//   const toggleLoginForm = () => {\n//     setShowLogin(!showLogin);\n//   };\n\n//   return (\n//     <div>\n//       <nav className=\"navbar\">\n//         <h1>Herbal Remedy System</h1>\n//         <div className=\"navbar-links\">\n//           <button onClick={toggleSignUpForm}>Sign Up</button>\n//           <button onClick={toggleLoginForm}>Login</button>\n//         </div>\n//       </nav>\n\n//       <div className=\"container\">\n//         {message && <p>{message}</p>}\n\n//         {/* Toggle Create Medicine Button */}\n//         {isLoggedIn && (\n//           <button onClick={toggleCreateForm} className=\"create-btn\">\n//             <span>+</span> {/* Icon for Create */}\n//           </button>\n//         )}\n\n//         {/* Medicine Creation Form */}\n//         {showCreateForm && (\n//           <form onSubmit={addMedicine} className=\"medicine-form\">\n//             <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Name\"\n//               value={newMedicine.name}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Image URL\"\n//               value={newMedicine.image_url}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n//               required\n//             />\n//             <textarea\n//               placeholder=\"Description\"\n//               value={newMedicine.description}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n//               required\n//             ></textarea>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Prescription\"\n//               value={newMedicine.prescription}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n//               required\n//             />\n//             <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n//           </form>\n//         )}\n\n//         {/* Medicines List and CRUD Operations */}\n//         {isLoggedIn && (\n//           <div className=\"medicine-list\">\n//             {medicines.map((medicine) => (\n//               <div key={medicine.id} className=\"medicine-card\">\n//                 <h2>{medicine.name}</h2>\n//                 <img src={medicine.image_url} alt={medicine.name} />\n//                 <p>{medicine.description}</p>\n//                 <p>\n//                   <strong>...</strong> {medicine.prescription}\n//                 </p>\n//                 <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n//                 <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n//                 <button onClick={() => addToCart(medicine.id)}>Add to Cart</button>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n\n//         {/* Sign Up Form */}\n//         {showSignUp && (\n//           <form onSubmit={signup} className=\"auth-form\">\n//             <h2>Sign Up</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               required\n//             />\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//             />\n//             <button type=\"submit\">Sign Up</button>\n//           </form>\n//         )}\n\n//         {/* Login Form */}\n//         {showLogin && (\n//           <form onSubmit={login} className=\"auth-form\">\n//             <h2>Login</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               required\n//             />\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//             />\n//             <button type=\"submit\">Login</button>\n//           </form>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState(''); // For Sign Up and Login\n  const [password, setPassword] = useState(''); // For Sign Up and Login\n  const [message, setMessage] = useState('');\n  const [medicines, setMedicines] = useState([]);\n  const [newMedicine, setNewMedicine] = useState({\n    name: '',\n    image_url: '',\n    description: '',\n    prescription: ''\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [editMedicine, setEditMedicine] = useState(null);\n  const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n\n  // State for Sign Up and Login forms\n  const [showSignUp, setShowSignUp] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n\n  // State to toggle the Create Medicine form\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  useEffect(() => {\n    fetchMedicines();\n    // Fetch cart items from localStorage on load\n    loadCartFromLocalStorage();\n  }, []);\n  const fetchMedicines = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/medicines');\n      setMedicines(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const loadCartFromLocalStorage = () => {\n    const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCartItems(savedCart);\n  };\n  const signup = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/signup', {\n        username,\n        password\n      });\n      setMessage('User created successfully');\n      setShowSignUp(false); // Hide the sign-up form after successful sign-up\n    } catch (error) {\n      setMessage('Error creating user');\n    }\n  };\n  const login = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      setMessage('Logged in successfully');\n      setIsLoggedIn(true);\n      setShowLogin(false); // Hide the login form after successful login\n    } catch (error) {\n      setMessage('Invalid credentials');\n    }\n  };\n  const addMedicine = async e => {\n    e.preventDefault();\n    if (editMedicine) {\n      await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n      setMessage('Medicine updated successfully!');\n      setEditMedicine(null);\n    } else {\n      await axios.post('http://localhost:5000/medicines', newMedicine);\n      setMessage('Medicine added successfully!');\n    }\n    fetchMedicines();\n    setNewMedicine({\n      name: '',\n      image_url: '',\n      description: '',\n      prescription: ''\n    });\n    setShowCreateForm(false); // Hide form after submission\n  };\n  const deleteMedicine = async id => {\n    await axios.delete(`http://localhost:5000/medicines/${id}`);\n    setMessage('Medicine deleted successfully!');\n    fetchMedicines();\n  };\n  const editMedicineForm = medicine => {\n    setNewMedicine(medicine);\n    setEditMedicine(medicine);\n    setShowCreateForm(true); // Show the form in edit mode\n  };\n\n  // Function to handle adding a medicine to the cart\n  const addToCart = medicine => {\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n    // Check if the item is already in the cart\n    const existingItem = cart.find(item => item.id === medicine.id);\n    if (existingItem) {\n      // If already exists, increase the quantity\n      existingItem.quantity += 1;\n    } else {\n      // Add new item with a quantity of 1\n      cart.push({\n        ...medicine,\n        quantity: 1\n      });\n    }\n\n    // Save updated cart to localStorage\n    localStorage.setItem('cart', JSON.stringify(cart));\n\n    // Update state to reflect changes in the cart\n    setCartItems(cart);\n    setMessage(`${medicine.name} added to cart!`);\n  };\n\n  // Toggle the create medicine form\n  const toggleCreateForm = () => {\n    setShowCreateForm(!showCreateForm);\n    setEditMedicine(null); // Reset the form for creating a new medicine\n  };\n\n  // Toggle the Sign Up form\n  const toggleSignUpForm = () => {\n    setShowSignUp(!showSignUp);\n  };\n\n  // Toggle the Login form\n  const toggleLoginForm = () => {\n    setShowLogin(!showLogin);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Herbal Remedy System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleSignUpForm,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleLoginForm,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-icon\",\n        children: [\"Cart (\", cartItems.reduce((acc, item) => acc + item.quantity, 0), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 21\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleCreateForm,\n        className: \"create-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), showCreateForm && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addMedicine,\n        className: \"medicine-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editMedicine ? 'Edit Medicine' : 'Create Medicine'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: newMedicine.name,\n          onChange: e => setNewMedicine({\n            ...newMedicine,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Image URL\",\n          value: newMedicine.image_url,\n          onChange: e => setNewMedicine({\n            ...newMedicine,\n            image_url: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Description\",\n          value: newMedicine.description,\n          onChange: e => setNewMedicine({\n            ...newMedicine,\n            description: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Prescription\",\n          value: newMedicine.prescription,\n          onChange: e => setNewMedicine({\n            ...newMedicine,\n            prescription: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: [editMedicine ? 'Update' : 'Add', \" Herbs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"medicine-list\",\n        children: medicines.map(medicine => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"medicine-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: medicine.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: medicine.image_url,\n            alt: medicine.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: medicine.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Prescription:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 19\n            }, this), \" \", medicine.prescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editMedicineForm(medicine),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteMedicine(medicine.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addToCart(medicine),\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 17\n          }, this)]\n        }, medicine.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your cart is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-list\",\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity: \", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this), showSignUp && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: signup,\n        className: \"auth-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this), showLogin && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: login,\n        className: \"auth-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Pi78ra5BsrKMV7hcTAaTLa9NpmY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","username","setUsername","password","setPassword","message","setMessage","medicines","setMedicines","newMedicine","setNewMedicine","name","image_url","description","prescription","isLoggedIn","setIsLoggedIn","editMedicine","setEditMedicine","cartItems","setCartItems","showSignUp","setShowSignUp","showLogin","setShowLogin","showCreateForm","setShowCreateForm","fetchMedicines","loadCartFromLocalStorage","response","get","data","error","console","log","savedCart","JSON","parse","localStorage","getItem","signup","e","preventDefault","post","login","addMedicine","put","id","deleteMedicine","delete","editMedicineForm","medicine","addToCart","cart","existingItem","find","item","quantity","push","setItem","stringify","toggleCreateForm","toggleSignUpForm","toggleLoginForm","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","reduce","acc","onSubmit","type","placeholder","value","onChange","target","required","map","src","alt","length","_c","$RefreshReg$"],"sources":["/root/development/haba/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [username, setUsername] = useState(''); // For Sign Up and Login\n//   const [password, setPassword] = useState(''); // For Sign Up and Login\n//   const [message, setMessage] = useState('');\n//   const [medicines, setMedicines] = useState([]);\n//   const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [editMedicine, setEditMedicine] = useState(null);\n//   const [cartItems, setCartItems] = useState([]);\n\n//   // State for Sign Up and Login forms\n//   const [showSignUp, setShowSignUp] = useState(false);\n//   const [showLogin, setShowLogin] = useState(false);\n\n//   // State to toggle the Create Medicine form\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   useEffect(() => {\n//     fetchMedicines();\n//     if (isLoggedIn) fetchCart();\n//   }, [isLoggedIn]);\n\n//   const fetchMedicines = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/medicines');\n//       setMedicines(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const fetchCart = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/cart');\n//       setCartItems(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const signup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/signup', { username, password });\n//       setMessage('User created successfully');\n//       setShowSignUp(false); // Hide the sign-up form after successful sign-up\n//     } catch (error) {\n//       setMessage('Error creating user');\n//     }\n//   };\n\n//   const login = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/login', { username, password });\n//       setMessage('Logged in successfully');\n//       setIsLoggedIn(true);\n//       setShowLogin(false); // Hide the login form after successful login\n//     } catch (error) {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   const addMedicine = async (e) => {\n//     e.preventDefault();\n//     if (editMedicine) {\n//       await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n//       setMessage('Medicine updated successfully!');\n//       setEditMedicine(null);\n//     } else {\n//       await axios.post('http://localhost:5000/medicines', newMedicine);\n//       setMessage('Medicine added successfully!');\n//     }\n//     fetchMedicines();\n//     setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n//     setShowCreateForm(false); // Hide form after submission\n//   };\n\n//   const deleteMedicine = async (id) => {\n//     await axios.delete(`http://localhost:5000/medicines/${id}`);\n//     setMessage('Medicine deleted successfully!');\n//     fetchMedicines();\n//   };\n\n//   const editMedicineForm = (medicine) => {\n//     setNewMedicine(medicine);\n//     setEditMedicine(medicine);\n//     setShowCreateForm(true);  // Show the form in edit mode\n//   };\n\n//   const addToCart = async (medicineId) => {\n//     await axios.post('http://localhost:5000/cart', { medicine_id: medicineId });\n//     setMessage('Medicine added to cart!');\n//     fetchCart();\n//   };\n\n//   // Toggle the create medicine form\n//   const toggleCreateForm = () => {\n//     setShowCreateForm(!showCreateForm);\n//     setEditMedicine(null); // Reset the form for creating a new medicine\n//   };\n\n//   // Toggle the Sign Up form\n//   const toggleSignUpForm = () => {\n//     setShowSignUp(!showSignUp);\n//   };\n\n//   // Toggle the Login form\n//   const toggleLoginForm = () => {\n//     setShowLogin(!showLogin);\n//   };\n\n//   return (\n//     <div>\n//       <nav className=\"navbar\">\n//         <h1>Herbal Remedy System</h1>\n//         <div className=\"navbar-links\">\n//           <button onClick={toggleSignUpForm}>Sign Up</button>\n//           <button onClick={toggleLoginForm}>Login</button>\n//         </div>\n//       </nav>\n\n//       <div className=\"container\">\n//         {message && <p>{message}</p>}\n\n//         {/* Toggle Create Medicine Button */}\n//         {isLoggedIn && (\n//           <button onClick={toggleCreateForm} className=\"create-btn\">\n//             <span>+</span> {/* Icon for Create */}\n//           </button>\n//         )}\n\n//         {/* Medicine Creation Form */}\n//         {showCreateForm && (\n//           <form onSubmit={addMedicine} className=\"medicine-form\">\n//             <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Name\"\n//               value={newMedicine.name}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Image URL\"\n//               value={newMedicine.image_url}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n//               required\n//             />\n//             <textarea\n//               placeholder=\"Description\"\n//               value={newMedicine.description}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n//               required\n//             ></textarea>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Prescription\"\n//               value={newMedicine.prescription}\n//               onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n//               required\n//             />\n//             <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n//           </form>\n//         )}\n\n//         {/* Medicines List and CRUD Operations */}\n//         {isLoggedIn && (\n//           <div className=\"medicine-list\">\n//             {medicines.map((medicine) => (\n//               <div key={medicine.id} className=\"medicine-card\">\n//                 <h2>{medicine.name}</h2>\n//                 <img src={medicine.image_url} alt={medicine.name} />\n//                 <p>{medicine.description}</p>\n//                 <p>\n//                   <strong>...</strong> {medicine.prescription}\n//                 </p>\n//                 <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n//                 <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n//                 <button onClick={() => addToCart(medicine.id)}>Add to Cart</button>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n\n//         {/* Sign Up Form */}\n//         {showSignUp && (\n//           <form onSubmit={signup} className=\"auth-form\">\n//             <h2>Sign Up</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               required\n//             />\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//             />\n//             <button type=\"submit\">Sign Up</button>\n//           </form>\n//         )}\n\n//         {/* Login Form */}\n//         {showLogin && (\n//           <form onSubmit={login} className=\"auth-form\">\n//             <h2>Login</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               required\n//             />\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//             />\n//             <button type=\"submit\">Login</button>\n//           </form>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [username, setUsername] = useState(''); // For Sign Up and Login\n  const [password, setPassword] = useState(''); // For Sign Up and Login\n  const [message, setMessage] = useState('');\n  const [medicines, setMedicines] = useState([]);\n  const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [editMedicine, setEditMedicine] = useState(null);\n  const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n\n  // State for Sign Up and Login forms\n  const [showSignUp, setShowSignUp] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n\n  // State to toggle the Create Medicine form\n  const [showCreateForm, setShowCreateForm] = useState(false);\n\n  useEffect(() => {\n    fetchMedicines();\n    // Fetch cart items from localStorage on load\n    loadCartFromLocalStorage();\n  }, []);\n\n  const fetchMedicines = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/medicines');\n      setMedicines(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const loadCartFromLocalStorage = () => {\n    const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCartItems(savedCart);\n  };\n\n  const signup = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/signup', { username, password });\n      setMessage('User created successfully');\n      setShowSignUp(false); // Hide the sign-up form after successful sign-up\n    } catch (error) {\n      setMessage('Error creating user');\n    }\n  };\n\n  const login = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/login', { username, password });\n      setMessage('Logged in successfully');\n      setIsLoggedIn(true);\n      setShowLogin(false); // Hide the login form after successful login\n    } catch (error) {\n      setMessage('Invalid credentials');\n    }\n  };\n\n  const addMedicine = async (e) => {\n    e.preventDefault();\n    if (editMedicine) {\n      await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n      setMessage('Medicine updated successfully!');\n      setEditMedicine(null);\n    } else {\n      await axios.post('http://localhost:5000/medicines', newMedicine);\n      setMessage('Medicine added successfully!');\n    }\n    fetchMedicines();\n    setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n    setShowCreateForm(false); // Hide form after submission\n  };\n\n  const deleteMedicine = async (id) => {\n    await axios.delete(`http://localhost:5000/medicines/${id}`);\n    setMessage('Medicine deleted successfully!');\n    fetchMedicines();\n  };\n\n  const editMedicineForm = (medicine) => {\n    setNewMedicine(medicine);\n    setEditMedicine(medicine);\n    setShowCreateForm(true);  // Show the form in edit mode\n  };\n\n  // Function to handle adding a medicine to the cart\n  const addToCart = (medicine) => {\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n    // Check if the item is already in the cart\n    const existingItem = cart.find(item => item.id === medicine.id);\n\n    if (existingItem) {\n      // If already exists, increase the quantity\n      existingItem.quantity += 1;\n    } else {\n      // Add new item with a quantity of 1\n      cart.push({ ...medicine, quantity: 1 });\n    }\n\n    // Save updated cart to localStorage\n    localStorage.setItem('cart', JSON.stringify(cart));\n\n    // Update state to reflect changes in the cart\n    setCartItems(cart);\n\n    setMessage(`${medicine.name} added to cart!`);\n  };\n\n  // Toggle the create medicine form\n  const toggleCreateForm = () => {\n    setShowCreateForm(!showCreateForm);\n    setEditMedicine(null); // Reset the form for creating a new medicine\n  };\n\n  // Toggle the Sign Up form\n  const toggleSignUpForm = () => {\n    setShowSignUp(!showSignUp);\n  };\n\n  // Toggle the Login form\n  const toggleLoginForm = () => {\n    setShowLogin(!showLogin);\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar\">\n        <h1>Herbal Remedy System</h1>\n        <div className=\"navbar-links\">\n          <button onClick={toggleSignUpForm}>Sign Up</button>\n          <button onClick={toggleLoginForm}>Login</button>\n        </div>\n        <div className=\"cart-icon\">\n          Cart ({cartItems.reduce((acc, item) => acc + item.quantity, 0)})\n        </div>\n      </nav>\n\n      <div className=\"container\">\n        {message && <p>{message}</p>}\n\n        {/* Toggle Create Medicine Button */}\n        {isLoggedIn && (\n          <button onClick={toggleCreateForm} className=\"create-btn\">\n            <span>+</span> {/* Icon for Create */}\n          </button>\n        )}\n\n        {/* Medicine Creation Form */}\n        {showCreateForm && (\n          <form onSubmit={addMedicine} className=\"medicine-form\">\n            <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              value={newMedicine.name}\n              onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n              required\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Image URL\"\n              value={newMedicine.image_url}\n              onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n              required\n            />\n            <textarea\n              placeholder=\"Description\"\n              value={newMedicine.description}\n              onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n              required\n            ></textarea>\n            <input\n              type=\"text\"\n              placeholder=\"Prescription\"\n              value={newMedicine.prescription}\n              onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n              required\n            />\n            <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n          </form>\n        )}\n\n        {/* Medicines List and CRUD Operations */}\n        {isLoggedIn && (\n          <div className=\"medicine-list\">\n            {medicines.map((medicine) => (\n              <div key={medicine.id} className=\"medicine-card\">\n                <h2>{medicine.name}</h2>\n                <img src={medicine.image_url} alt={medicine.name} />\n                <p>{medicine.description}</p>\n                <p>\n                  <strong>Prescription:</strong> {medicine.prescription}\n                </p>\n                <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n                <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n                <button onClick={() => addToCart(medicine)}>Add to Cart</button>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Cart Display */}\n        <h2>Your Cart</h2>\n        {cartItems.length === 0 ? (\n          <p>Your cart is empty.</p>\n        ) : (\n          <div className=\"cart-list\">\n            {cartItems.map((item) => (\n              <div key={item.id} className=\"cart-item\">\n                <h3>{item.name}</h3>\n                <p>Quantity: {item.quantity}</p>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Sign Up Form */}\n        {showSignUp && (\n          <form onSubmit={signup} className=\"auth-form\">\n            <h2>Sign Up</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <button type=\"submit\">Sign Up</button>\n          </form>\n        )}\n\n        {/* Login Form */}\n        {showLogin && (\n          <form onSubmit={login} className=\"auth-form\">\n            <h2>Login</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <button type=\"submit\">Login</button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,IAAI,EAAE,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,WAAW,EAAE,EAAE;IAAEC,YAAY,EAAE;EAAG,CAAC,CAAC;EAC9G,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAM,CAAC+B,cAAc,EAAEC,iBAAiB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACdgC,cAAc,CAAC,CAAC;IAChB;IACAC,wBAAwB,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,iCAAiC,CAAC;MACnEtB,YAAY,CAACqB,QAAQ,CAACE,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMJ,wBAAwB,GAAGA,CAAA,KAAM;IACrC,MAAMO,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;IAChEnB,YAAY,CAACe,SAAS,CAAC;EACzB,CAAC;EAED,MAAMK,MAAM,GAAG,MAAOC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAM9C,KAAK,CAAC+C,IAAI,CAAC,8BAA8B,EAAE;QAAE1C,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACxEG,UAAU,CAAC,2BAA2B,CAAC;MACvCgB,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACd1B,UAAU,CAAC,qBAAqB,CAAC;IACnC;EACF,CAAC;EAED,MAAMsC,KAAK,GAAG,MAAOH,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAM9C,KAAK,CAAC+C,IAAI,CAAC,6BAA6B,EAAE;QAAE1C,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACvEG,UAAU,CAAC,wBAAwB,CAAC;MACpCU,aAAa,CAAC,IAAI,CAAC;MACnBQ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACd1B,UAAU,CAAC,qBAAqB,CAAC;IACnC;EACF,CAAC;EAED,MAAMuC,WAAW,GAAG,MAAOJ,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIzB,YAAY,EAAE;MAChB,MAAMrB,KAAK,CAACkD,GAAG,CAAC,mCAAmC7B,YAAY,CAAC8B,EAAE,EAAE,EAAEtC,WAAW,CAAC;MAClFH,UAAU,CAAC,gCAAgC,CAAC;MAC5CY,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACL,MAAMtB,KAAK,CAAC+C,IAAI,CAAC,iCAAiC,EAAElC,WAAW,CAAC;MAChEH,UAAU,CAAC,8BAA8B,CAAC;IAC5C;IACAqB,cAAc,CAAC,CAAC;IAChBjB,cAAc,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,SAAS,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,YAAY,EAAE;IAAG,CAAC,CAAC;IAC9EY,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMsB,cAAc,GAAG,MAAOD,EAAE,IAAK;IACnC,MAAMnD,KAAK,CAACqD,MAAM,CAAC,mCAAmCF,EAAE,EAAE,CAAC;IAC3DzC,UAAU,CAAC,gCAAgC,CAAC;IAC5CqB,cAAc,CAAC,CAAC;EAClB,CAAC;EAED,MAAMuB,gBAAgB,GAAIC,QAAQ,IAAK;IACrCzC,cAAc,CAACyC,QAAQ,CAAC;IACxBjC,eAAe,CAACiC,QAAQ,CAAC;IACzBzB,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAE;EAC5B,CAAC;;EAED;EACA,MAAM0B,SAAS,GAAID,QAAQ,IAAK;IAC9B,IAAIE,IAAI,GAAGjB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;;IAEzD;IACA,MAAMe,YAAY,GAAGD,IAAI,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACT,EAAE,KAAKI,QAAQ,CAACJ,EAAE,CAAC;IAE/D,IAAIO,YAAY,EAAE;MAChB;MACAA,YAAY,CAACG,QAAQ,IAAI,CAAC;IAC5B,CAAC,MAAM;MACL;MACAJ,IAAI,CAACK,IAAI,CAAC;QAAE,GAAGP,QAAQ;QAAEM,QAAQ,EAAE;MAAE,CAAC,CAAC;IACzC;;IAEA;IACAnB,YAAY,CAACqB,OAAO,CAAC,MAAM,EAAEvB,IAAI,CAACwB,SAAS,CAACP,IAAI,CAAC,CAAC;;IAElD;IACAjC,YAAY,CAACiC,IAAI,CAAC;IAElB/C,UAAU,CAAC,GAAG6C,QAAQ,CAACxC,IAAI,iBAAiB,CAAC;EAC/C,CAAC;;EAED;EACA,MAAMkD,gBAAgB,GAAGA,CAAA,KAAM;IAC7BnC,iBAAiB,CAAC,CAACD,cAAc,CAAC;IAClCP,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED;EACA,MAAM4C,gBAAgB,GAAGA,CAAA,KAAM;IAC7BxC,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;;EAED;EACA,MAAM0C,eAAe,GAAGA,CAAA,KAAM;IAC5BvC,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,oBACEzB,OAAA;IAAAkE,QAAA,gBACElE,OAAA;MAAKmE,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACrBlE,OAAA;QAAAkE,QAAA,EAAI;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BvE,OAAA;QAAKmE,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3BlE,OAAA;UAAQwE,OAAO,EAAER,gBAAiB;UAAAE,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnDvE,OAAA;UAAQwE,OAAO,EAAEP,eAAgB;UAAAC,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACNvE,OAAA;QAAKmE,SAAS,EAAC,WAAW;QAAAD,QAAA,GAAC,QACnB,EAAC7C,SAAS,CAACoD,MAAM,CAAC,CAACC,GAAG,EAAEhB,IAAI,KAAKgB,GAAG,GAAGhB,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC,EAAC,GACjE;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENvE,OAAA;MAAKmE,SAAS,EAAC,WAAW;MAAAD,QAAA,GACvB3D,OAAO,iBAAIP,OAAA;QAAAkE,QAAA,EAAI3D;MAAO;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAG3BtD,UAAU,iBACTjB,OAAA;QAAQwE,OAAO,EAAET,gBAAiB;QAACI,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvDlE,OAAA;UAAAkE,QAAA,EAAM;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CACT,EAGA5C,cAAc,iBACb3B,OAAA;QAAM2E,QAAQ,EAAE5B,WAAY;QAACoB,SAAS,EAAC,eAAe;QAAAD,QAAA,gBACpDlE,OAAA;UAAAkE,QAAA,EAAK/C,YAAY,GAAG,eAAe,GAAG;QAAiB;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7DvE,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,MAAM;UAClBC,KAAK,EAAEnE,WAAW,CAACE,IAAK;UACxBkE,QAAQ,EAAGpC,CAAC,IAAK/B,cAAc,CAAC;YAAE,GAAGD,WAAW;YAAEE,IAAI,EAAE8B,CAAC,CAACqC,MAAM,CAACF;UAAM,CAAC,CAAE;UAC1EG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFvE,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,WAAW;UACvBC,KAAK,EAAEnE,WAAW,CAACG,SAAU;UAC7BiE,QAAQ,EAAGpC,CAAC,IAAK/B,cAAc,CAAC;YAAE,GAAGD,WAAW;YAAEG,SAAS,EAAE6B,CAAC,CAACqC,MAAM,CAACF;UAAM,CAAC,CAAE;UAC/EG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFvE,OAAA;UACE6E,WAAW,EAAC,aAAa;UACzBC,KAAK,EAAEnE,WAAW,CAACI,WAAY;UAC/BgE,QAAQ,EAAGpC,CAAC,IAAK/B,cAAc,CAAC;YAAE,GAAGD,WAAW;YAAEI,WAAW,EAAE4B,CAAC,CAACqC,MAAM,CAACF;UAAM,CAAC,CAAE;UACjFG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACZvE,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,cAAc;UAC1BC,KAAK,EAAEnE,WAAW,CAACK,YAAa;UAChC+D,QAAQ,EAAGpC,CAAC,IAAK/B,cAAc,CAAC;YAAE,GAAGD,WAAW;YAAEK,YAAY,EAAE2B,CAAC,CAACqC,MAAM,CAACF;UAAM,CAAC,CAAE;UAClFG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFvE,OAAA;UAAQ4E,IAAI,EAAC,QAAQ;UAAAV,QAAA,GAAE/C,YAAY,GAAG,QAAQ,GAAG,KAAK,EAAC,QAAM;QAAA;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CACP,EAGAtD,UAAU,iBACTjB,OAAA;QAAKmE,SAAS,EAAC,eAAe;QAAAD,QAAA,EAC3BzD,SAAS,CAACyE,GAAG,CAAE7B,QAAQ,iBACtBrD,OAAA;UAAuBmE,SAAS,EAAC,eAAe;UAAAD,QAAA,gBAC9ClE,OAAA;YAAAkE,QAAA,EAAKb,QAAQ,CAACxC;UAAI;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBvE,OAAA;YAAKmF,GAAG,EAAE9B,QAAQ,CAACvC,SAAU;YAACsE,GAAG,EAAE/B,QAAQ,CAACxC;UAAK;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpDvE,OAAA;YAAAkE,QAAA,EAAIb,QAAQ,CAACtC;UAAW;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BvE,OAAA;YAAAkE,QAAA,gBACElE,OAAA;cAAAkE,QAAA,EAAQ;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAClB,QAAQ,CAACrC,YAAY;UAAA;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC,eACJvE,OAAA;YAAQwE,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAACC,QAAQ,CAAE;YAAAa,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChEvE,OAAA;YAAQwE,OAAO,EAAEA,CAAA,KAAMtB,cAAc,CAACG,QAAQ,CAACJ,EAAE,CAAE;YAAAiB,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnEvE,OAAA;YAAQwE,OAAO,EAAEA,CAAA,KAAMlB,SAAS,CAACD,QAAQ,CAAE;YAAAa,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GATxDlB,QAAQ,CAACJ,EAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUhB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,eAGDvE,OAAA;QAAAkE,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjBlD,SAAS,CAACgE,MAAM,KAAK,CAAC,gBACrBrF,OAAA;QAAAkE,QAAA,EAAG;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE1BvE,OAAA;QAAKmE,SAAS,EAAC,WAAW;QAAAD,QAAA,EACvB7C,SAAS,CAAC6D,GAAG,CAAExB,IAAI,iBAClB1D,OAAA;UAAmBmE,SAAS,EAAC,WAAW;UAAAD,QAAA,gBACtClE,OAAA;YAAAkE,QAAA,EAAKR,IAAI,CAAC7C;UAAI;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpBvE,OAAA;YAAAkE,QAAA,GAAG,YAAU,EAACR,IAAI,CAACC,QAAQ;UAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFxBb,IAAI,CAACT,EAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGZ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,EAGAhD,UAAU,iBACTvB,OAAA;QAAM2E,QAAQ,EAAEjC,MAAO;QAACyB,SAAS,EAAC,WAAW;QAAAD,QAAA,gBAC3ClE,OAAA;UAAAkE,QAAA,EAAI;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBvE,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAE3E,QAAS;UAChB4E,QAAQ,EAAGpC,CAAC,IAAKvC,WAAW,CAACuC,CAAC,CAACqC,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFvE,OAAA;UACE4E,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAEzE,QAAS;UAChB0E,QAAQ,EAAGpC,CAAC,IAAKrC,WAAW,CAACqC,CAAC,CAACqC,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFvE,OAAA;UAAQ4E,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CACP,EAGA9C,SAAS,iBACRzB,OAAA;QAAM2E,QAAQ,EAAE7B,KAAM;QAACqB,SAAS,EAAC,WAAW;QAAAD,QAAA,gBAC1ClE,OAAA;UAAAkE,QAAA,EAAI;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdvE,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAE3E,QAAS;UAChB4E,QAAQ,EAAGpC,CAAC,IAAKvC,WAAW,CAACuC,CAAC,CAACqC,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFvE,OAAA;UACE4E,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAEzE,QAAS;UAChB0E,QAAQ,EAAGpC,CAAC,IAAKrC,WAAW,CAACqC,CAAC,CAACqC,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFvE,OAAA;UAAQ4E,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrE,EAAA,CAzQQD,GAAG;AAAAqF,EAAA,GAAHrF,GAAG;AA2QZ,eAAeA,GAAG;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}